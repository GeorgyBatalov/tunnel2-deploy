#!/bin/bash

# Vault Unseal Script
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø–µ—á–∞—Ç—ã–≤–∞–µ—Ç Vault –∏—Å–ø–æ–ª—å–∑—É—è –∫–ª—é—á–∏ –∏–∑ vault-keys.json

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
DEPLOY_DIR="$(dirname "$SCRIPT_DIR")"
VAULT_KEYS_FILE="$DEPLOY_DIR/vault-keys.json"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "üîì Vault Unseal Script"
echo "======================"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ —Å –∫–ª—é—á–∞–º–∏
if [ ! -f "$VAULT_KEYS_FILE" ]; then
    echo -e "${RED}‚ùå Error: vault-keys.json not found at $VAULT_KEYS_FILE${NC}"
    echo "Please ensure vault-keys.json exists in tunnel2-deploy/"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ jq —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v jq &> /dev/null; then
    echo -e "${RED}‚ùå Error: jq is not installed${NC}"
    echo "Install with: brew install jq"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä Vault –∑–∞–ø—É—â–µ–Ω
if ! docker ps --format '{{.Names}}' | grep -q "^vault$"; then
    echo -e "${RED}‚ùå Error: Vault container is not running${NC}"
    echo "Start it with: cd $DEPLOY_DIR/dev && docker compose -f docker-compose-infrastructure.yml up -d vault"
    exit 1
fi

echo -e "${YELLOW}‚è≥ Waiting for Vault to be ready...${NC}"
sleep 3

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Vault
VAULT_STATUS=$(docker exec -e VAULT_ADDR=http://127.0.0.1:8200 vault vault status -format=json 2>/dev/null || echo '{"sealed":true,"initialized":false}')
SEALED=$(echo "$VAULT_STATUS" | jq -r '.sealed')
INITIALIZED=$(echo "$VAULT_STATUS" | jq -r '.initialized')

echo "Vault Status:"
echo "  - Initialized: $INITIALIZED"
echo "  - Sealed: $SEALED"
echo ""

if [ "$INITIALIZED" = "false" ]; then
    echo -e "${RED}‚ùå Vault is not initialized yet${NC}"
    echo "Run: docker exec -it vault vault operator init"
    exit 1
fi

if [ "$SEALED" = "false" ]; then
    echo -e "${GREEN}‚úÖ Vault is already unsealed!${NC}"
    exit 0
fi

# –ß–∏—Ç–∞–µ–º –∫–ª—é—á–∏ –∏–∑ JSON
echo -e "${YELLOW}üîë Reading unseal keys from vault-keys.json...${NC}"
KEYS=$(jq -r '.keys_base64[]' "$VAULT_KEYS_FILE")

# –î–ª—è unseal –Ω—É–∂–Ω–æ 3 –∫–ª—é—á–∞ –∏–∑ 5
KEY_COUNT=0
for KEY in $KEYS; do
    KEY_COUNT=$((KEY_COUNT + 1))
    if [ $KEY_COUNT -le 3 ]; then
        echo "  Applying key $KEY_COUNT/3..."
        docker exec -e VAULT_ADDR=http://127.0.0.1:8200 vault vault operator unseal "$KEY" > /dev/null 2>&1
    fi
done

echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
VAULT_STATUS=$(docker exec -e VAULT_ADDR=http://127.0.0.1:8200 vault vault status -format=json 2>/dev/null || echo '{"sealed":true}')
SEALED=$(echo "$VAULT_STATUS" | jq -r '.sealed')

if [ "$SEALED" = "false" ]; then
    echo -e "${GREEN}‚úÖ Vault successfully unsealed!${NC}"
    echo ""
    echo "Root token: $(jq -r '.root_token' "$VAULT_KEYS_FILE")"
    echo ""
    echo "You can now access Vault UI at: http://localhost:8200"
    exit 0
else
    echo -e "${RED}‚ùå Failed to unseal Vault${NC}"
    exit 1
fi
