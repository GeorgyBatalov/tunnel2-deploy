name: tunnel2

services:
  tunnel_server:
    build:
      context: ../tunnel2-server
      dockerfile: Dockerfile
    ports:
      - "12002:12002"
    restart: unless-stopped
    env_file:
      - ./env/tunnel_server.env
    # Порты не публикуем — сервер не должен быть в data-path

  tunnel_entry:
    build:
      context: ../tunnel-proxy-entry
      dockerfile: Dockerfile
    ports:
      - "12000:80"   # вход снаружи для тестов/трафика
      - "12001:12001"  
    restart: unless-stopped
    env_file:
      - ./env/tunnel_entry.env
    # depends_on больше НЕ нужен (split-plane)
  
  vault:
    image: hashicorp/vault:1.20
    container_name: vault
    user: "0:0"   # запускаем Vault ПОД root
    entrypoint: [ "vault","server","-config=/vault/config/config.hcl" ]
    ports:
      - "8200:8200"    # UI+API наружу (можно 8200:8200, если он свободен)
    cap_add:
      - IPC_LOCK
    volumes:
      - vault-data:/vault/data
      - ./vault/config.hcl:/vault/config/config.hcl:ro
    restart: unless-stopped

  httpbin:
    image: kennethreitz/httpbin
    ports:
      - "12005:80"
    restart: unless-stopped
    # порт наружу не нужен — доступ из сети compose

  httpbin2:
    image: mccutchen/go-httpbin:latest
    ports:
      - "12006:8080"
    restart: unless-stopped
    # новый стабильный httpbin на Go

  test_backend:
    build:
      context: ../tunnel-test-backend
    restart: unless-stopped
    # порт наружу не нужен

  client_test_backend_first:
    build:
      context: ../tunnel2-client
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - tunnel_server
      - httpbin
    environment:
      - TUNNEL_SERVER_HOST=tunnel_server
      - TUNNEL_SERVER_PORT=12002
      - LOCAL_BACKEND_HOST=httpbin
      - LOCAL_BACKEND_PORT=80
      - SESSION_ID=11111111-1111-1111-1111-111111111111

  client_test_backend_second:
    build:
      context: ../tunnel2-client
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - tunnel_server
      - test_backend
    environment:
      - TUNNEL_SERVER_HOST=tunnel_server
      - TUNNEL_SERVER_PORT=12002
      - LOCAL_BACKEND_HOST=test_backend
      - LOCAL_BACKEND_PORT=80
      - SESSION_ID=22222222-2222-2222-2222-222222222222

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    restart: unless-stopped
    # порт наружу не публикуем

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"   # оставим только UI
      - "5672:5672"  
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

volumes:
  vault-data: